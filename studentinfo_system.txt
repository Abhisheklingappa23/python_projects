'''Author-Abhishek L'''
'''STUDENT INFORMATION SYSTEM'''
from tkinter import *
from tkinter import ttk
import pymysql
class Student:
    def __init__(self,root):
        self.root=root
        self.root.title("STUDENT INFO SYSTEM")
        self.root.geometry("1350x700+0+0")

        title=Label(self.root,text="Student Info System",bd=10,relief=GROOVE,font=("times new roman",40,"bold"),bg="skyblue",fg="white")
        title.pack(side=TOP,fill=X)
#==================All var==========================================================================
        self.roll_var=StringVar()
        self.name_var = StringVar()
        self.email_var = StringVar()
        self.gender_var = StringVar()
        self.contact_var = StringVar()
        self.DOB_var = StringVar()



        Manage_Frame=Frame(self.root,bd=4,relief=RIDGE,bg="Skyblue")
        Manage_Frame.place(x=20,y=100,width=450,height=580)

        m_title=Label(Manage_Frame,text="STUDENTS INFORMATION",bg="Skyblue",fg="white",font=("times new roman",20,"bold"))
        m_title.grid(row=0,columnspan=2,pady=20)

        lbl_roll=Label(Manage_Frame,text="Roll No.",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_roll.grid(row=1,column=0,pady=10,padx=20,sticky="w")

        txt_roll=Entry(Manage_Frame,textvariable=self.roll_var,font=("times new roman",15,"bold"),bd=5,relief=GROOVE)
        txt_roll.grid(row=1,column=1,pady=10,padx=20,sticky="w")

#===========================NAME================================================================
        lbl_name=Label(Manage_Frame,text="Full Name",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_name.grid(row=2,column=0,pady=10,padx=20,sticky="w")

        txt_name=Entry(Manage_Frame,textvariable=self.name_var,font=("times new roman",15,"bold"),bd=5,relief=GROOVE)
        txt_name.grid(row=2,column=1,pady=10,padx=20,sticky="w")


#===============================email====================================================
        lbl_email=Label(Manage_Frame,text="E-Mail",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_email.grid(row=3,column=0,pady=10,padx=20,sticky="w")

        txt_email=Entry(Manage_Frame,textvariable=self.email_var,font=("times new roman",15,"bold"),bd=5,relief=GROOVE)
        txt_email.grid(row=3,column=1,pady=10,padx=20,sticky="w")

#================================gendr===================================================

        lbl_gender=Label(Manage_Frame,text="Gender",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_gender.grid(row=4,column=0,pady=10,padx=20,sticky="w")

        combo_gender=ttk.Combobox(Manage_Frame,textvariable=self.gender_var,font=("times new roman",13,"bold"),state="readonly")
        combo_gender['values']=("MALE","FEMALE","OTHER")
        combo_gender.grid(row=4,column=1,pady=10,padx=20)
#=======================================contact===============================================
        lbl_contact=Label(Manage_Frame,text="Phone No.",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_contact.grid(row=5,column=0,pady=10,padx=20,sticky="w")

        txt_contact=Entry(Manage_Frame,textvariable=self.contact_var,font=("times new roman",15,"bold"),bd=5,relief=GROOVE)
        txt_contact.grid(row=5,column=1,pady=10,padx=20,sticky="w")
#=========================================dob================================================
        lbl_DOB=Label(Manage_Frame,text="DOB",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_DOB.grid(row=6,column=0,pady=10,padx=20,sticky="w")

        txt_DOB=Entry(Manage_Frame,textvariable=self.DOB_var,font=("times new roman",15,"bold"),bd=5,relief=GROOVE)
        txt_DOB.grid(row=6,column=1,pady=10,padx=20,sticky="w")

#===========================================address=========================================
        lbl_address=Label(Manage_Frame,text="Address",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_address.grid(row=7,column=0,pady=10,padx=20,sticky="w")

        self.txt_address=Text(Manage_Frame,width=30,height=4,font=("",10))
        self.txt_address.grid(row=7,column=1,pady=10,padx=20,sticky="w")

#=============================Button========================================================
        btn_Frame=Frame(Manage_Frame,bd=4,relief=RIDGE,bg="Skyblue")
        btn_Frame.place(x=14,y=500,width=410)

        Addbtn = Button(btn_Frame, text="Add", width=10,command=self.add_students).grid(row=0, column=0, padx=10, pady=10)
        updatebtn = Button(btn_Frame, text="Update", width=10,command=self.update_data).grid(row=0, column=1, padx=10, pady=10)
        deletebtn = Button(btn_Frame, text="Delete", width=10,command=self.delete_data).grid(row=0, column=2, padx=10, pady=10)
        clearbtn = Button(btn_Frame, text="Clear", width=10,command=self.clear).grid(row=0, column=3, padx=10, pady=10)
#======================================================================================
        detail_Frame=Frame(self.root,bd=4,relief=RIDGE,bg="Skyblue")
        detail_Frame.place(x=500,y=100,width=800,height=580)

        lbl_search=Label(detail_Frame,text="Search by",bg="Skyblue",fg="green",font=("times new roman",20,"bold"))
        lbl_search.grid(row=0,column=0,pady=10,padx=20,sticky="w")

        combo_search=ttk.Combobox(detail_Frame,width=10,font=("times new roman",13,"bold"),state="readonly")
        combo_search['values']=("Roll No.","Name","contact")
        combo_search.grid(row=0,column=1,pady=10,padx=20)

        txt_search=Entry(detail_Frame,width=20,font=("times new roman",10,"bold"),bd=5,relief=GROOVE)
        txt_search.grid(row=0,column=2,pady=10,padx=20,sticky="w")

        searchbtn = Button(detail_Frame, text="Search", width=10,pady=5).grid(row=0, column=3, padx=10, pady=10)
        showallbtn = Button(detail_Frame, text="Show All", width=10,pady=5).grid(row=0, column=4, padx=10, pady=10)

#==================================Table frame==============================================================================

        table_Frame=Frame(detail_Frame,bd=4,relief=RIDGE,bg="Skyblue")
        table_Frame.place(x=10,y=70,width=760,height=500)

        scroll_x = Scrollbar(table_Frame,orient=HORIZONTAL)
        scroll_y = Scrollbar(table_Frame, orient=VERTICAL)
        self.Student_table=ttk.Treeview(table_Frame,columns=("Roll","Name","Email","Gender","Phone No.","DOB","Address"),xscrollcommand=scroll_x.set,yscrollcommand=scroll_y.set)
        scroll_x.pack(side=BOTTOM,fill=X)
        scroll_y.pack(side=RIGHT,fill=Y)
        scroll_x.config(command=self.Student_table.xview)
        scroll_y.config(command=self.Student_table.yview)
        self.Student_table.heading("Roll",text="Roll No.")
        self.Student_table.heading("Name", text="Name")
        self.Student_table.heading("Email", text="Email")
        self.Student_table.heading("Gender", text="Gender")
        self.Student_table.heading("Phone No.", text="Phone No.")
        self.Student_table.heading("DOB", text="D.O.B")
        self.Student_table.heading("Address", text="Address")
        self.Student_table['show']="headings"
        self.Student_table.column("Roll",width=100)
        self.Student_table.column("Name", width=100)
        self.Student_table.column("Email", width=100)
        self.Student_table.column("Gender", width=100)
        self.Student_table.column("Phone No.", width=100)
        self.Student_table.column("DOB", width=100)
        self.Student_table.column("Address", width=150)
        self.Student_table.pack(fill=BOTH,expand=1)
        self.Student_table.bind("<ButtonRelease-1>",self.get_cursor)
        self.fetch_data()
    def add_students(self):
        conn=pymysql.connect(host="localhost",user="root",passwd="",database="sis")
        cur=conn.cursor()
        cur.execute("insert into student_details values(%s,%s,%s,%s,%s,%s,%s)",(
            self.roll_var.get(),
            self.name_var.get(),
            self.email_var.get(),
            self.gender_var.get(),
            self.contact_var.get(),
            self.DOB_var.get(),
            self.txt_address.get('1.0',END)
        ))
        conn.commit()
        self.fetch_data()
        self.clear()
        conn.close()
    def fetch_data(self):
        conn=pymysql.connect(host="localhost",user="root",passwd="",database="sis")
        cur=conn.cursor()
        cur.execute("select * from student_details")
        rows=cur.fetchall()
        if len(rows)!=0:
            self.Student_table.delete(*self.Student_table.get_children())
            for row in rows:
                self.Student_table.insert("",END,values=row)
            conn.commit()
        conn.close()
    def clear(self):
        self.roll_var.set("")
        self.name_var.set("")
        self.email_var.set("")
        self.gender_var.set("")
        self.contact_var.set("")
        self.DOB_var.set("")
        self.txt_address.delete("1.0",END)

    def get_cursor(self,ev):
        cursor_row=self.Student_table.focus()
        content=self.Student_table.item(cursor_row)
        row=content['values']
        self.roll_var.set(row[0])
        self.name_var.set(row[1])
        self.email_var.set(row[2])
        self.gender_var.set(row[3])
        self.contact_var.set(row[4])
        self.DOB_var.set(row[5])
        self.txt_address.delete("1.0",END)
        self.txt_address.insert(END,row[6])

    def update_data(self):
        conn = pymysql.connect(host="localhost", user="root", passwd="", database="sis")
        cur = conn.cursor()
        cur.execute("update student_details set name=%s,email=%s,gender=%s,contact=%s,DOB=%s,address=%s where roll=%s", (
            self.name_var.get(),
            self.email_var.get(),
            self.gender_var.get(),
            self.contact_var.get(),
            self.DOB_var.get(),
            self.txt_address.get('1.0', END),
            self.roll_var.get(),
        ))
        conn.commit()
        self.fetch_data()
        self.clear()
        conn.close()
    def delete_data(self):
        conn=pymysql.connect(host="localhost",user="root",passwd="",database="sis")
        cur=conn.cursor()
        cur.execute("delete from student_details where roll=%s",self.roll_var.get())
        conn.commit()
        conn.close()
        self.fetch_data()
        self.clear()
root=Tk()
obj = Student(root)
root.mainloop()